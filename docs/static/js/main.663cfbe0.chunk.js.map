{"version":3,"sources":["components/Contador.jsx","App.js","reportWebVitals.js","index.js"],"names":["Contador","initialValue","range","useState","value","setValue","console","log","className","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAwCeA,EApCE,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAAW,EAEdC,mBAASF,GAFK,mBAEjCG,EAFiC,KAE1BC,EAF0B,KAqBxC,OAFAC,QAAQC,IAAIN,GAGR,gCACI,2CAAa,sBAAMO,UAlBpBJ,EAAQ,EACA,WACHA,EAAQ,EACL,gBADN,EAgBY,SAA0CA,OACvD,uBACA,wBAAQK,QAdC,WACbJ,EAASD,EAAQF,IAab,sBACA,wBAAQO,QAXC,WACbJ,EAASD,EAAQF,IAUb,2BCxBGQ,MAJf,WACE,OAAO,cAAC,EAAD,CAAUT,aAAc,EAAGC,MAAO,KCS5BS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.663cfbe0.chunk.js","sourcesContent":["import {useState} from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport './Contador.css'\r\n\r\nconst Contador = ({initialValue, range}) => {\r\n\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const isPositiveOrNegative = () => {\r\n        if(value > 0)\r\n            return \"positive\";\r\n        else if(value < 0)\r\n            return \"negative\";\r\n    }\r\n\r\n    const increase = () => {\r\n        setValue(value + range);\r\n    }\r\n\r\n    const decrease = () => {\r\n        setValue(value - range);\r\n    }\r\n\r\n    console.log(initialValue);\r\n\r\n    return (\r\n        <div>\r\n            <p>Contador: <span className={isPositiveOrNegative()}>{value}</span></p>\r\n            <hr />\r\n            <button onClick={increase}>Aumentar</button>\r\n            <button onClick={decrease}>Disminuir</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nContador.propTypes = {\r\n    initialValue: PropTypes.number,\r\n    range: PropTypes.number\r\n}\r\n\r\nexport default Contador\r\n\r\n","import Contador from \"./components/Contador\";\n\nfunction App() {\n  return <Contador initialValue={0} range={2} />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}